function c(s){let t=!1;const n=[],o=[];function r(e){n.length>0?n.shift()(e):o.push(e)}function f(e){t||r({value:e,done:!1})}function u(){t||(t=!0,n.forEach(e=>e({value:void 0,done:!0})),n.length=0)}function i(e){t||(r(Promise.reject(e)),u())}try{s(f,u,i)}catch(e){i(e)}return{next(){return new Promise(e=>{o.length>0?e(o.shift()):t?e({value:void 0,done:!0}):n.push(e)})},[Symbol.asyncIterator](){return this}}}export{c};
